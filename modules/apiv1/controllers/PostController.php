<?php


namespace app\modules\apiv1\controllers;


use app\models\PostCategoria;
use app\models\User;
use app\modules\apiv1\models\Post;
use app\modules\apiv1\models\PostSearch;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\data\ActiveDataFilter;
use yii\data\ActiveDataProvider;
use yii\data\DataFilter;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBasicAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\auth\QueryParamAuth;
use yii\filters\ContentNegotiator;
use yii\rest\ActiveController;
use yii\web\ForbiddenHttpException;
use yii\web\Response;

class PostController extends ActiveController
{

    public $modelClass = Post::class;


    public function beforeAction($action)
    {
        if($action->id=='create') {
            Yii::$app->db->beginTransaction();
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function afterAction($action, $result)
    {
        if($action->id=='create'){
            $params = Yii::$app->getRequest()->getBodyParams();
            if(isset($params['categorias'])) {
                foreach ($params['categorias'] as $cat_id) {
                    $model = new PostCategoria(['post_id' => $result->id, 'categoria_id' => $cat_id]);
                    if(!$model->save()){
                        $result->addErrors($model->getErrors());
                    }
                }
            }
            $transaction = Yii::$app->db->getTransaction();
            if(!$result->hasErrors()){
                $transaction->commit();
            }else{
                $transaction->rollBack();
            }
        }
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $actions = parent::actions();
        $actions['index']['prepareDataProvider'] = [$this, 'prepareDataProvider'];
//        $actions['index']['dataFilter'] = ['class'=>ActiveDataFilter::class,'searchModel' => Post::class];
        return $actions;
    }

    public function prepareDataProvider()
    {
        $searchModel = new Post();
        $dataProvider =  $searchModel->search(Yii::$app->request->queryParams);
        return $dataProvider;
    }


}
